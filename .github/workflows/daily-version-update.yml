name: 每日版本更新

on:
  schedule:
    # 每天北京时间2点运行 (UTC时间18点，北京时间比UTC快8小时)
    - cron: '0 18 * * *'
  workflow_dispatch: # 允许手动触发

jobs:
  update-versions:
    runs-on: ubuntu-latest
    permissions:
      contents: write # 明确声明需要写入权限
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        with:
          persist-credentials: false # 避免使用GITHUB_TOKEN进行推送
      
      - name: 创建版本目录
        run: |
          mkdir -p version
      
      - name: 下载版本文件
        run: |
          # 下载各种类型的版本文件
          curl -L https://github.com/NoUnityCN/service/releases/download/releases/LTS.json -o version/LTS.json
          curl -L https://github.com/NoUnityCN/service/releases/download/releases/TECH.json -o version/TECH.json
          curl -L https://github.com/NoUnityCN/service/releases/download/releases/BETA.json -o version/BETA.json
          curl -L https://github.com/NoUnityCN/service/releases/download/releases/ALPHA.json -o version/ALPHA.json
          
          # 显示下载内容摘要
          echo "已下载的版本文件:"
          ls -la version/
          
          # 显示文件内容概览
          echo "LTS版本数量: $(grep -o "unityhub://" version/LTS.json | wc -l)"
          echo "TECH版本数量: $(grep -o "unityhub://" version/TECH.json | wc -l)"
          echo "BETA版本数量: $(grep -o "unityhub://" version/BETA.json | wc -l)"
          echo "ALPHA版本数量: $(grep -o "unityhub://" version/ALPHA.json | wc -l)"
      
      - name: 配置Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      
      - name: 提交更改
        run: |
          # 检查是否有实际更改
          if git diff --quiet version/; then
            echo "没有检测到版本更新，跳过提交"
            exit 0
          fi
          
          git add version/
          git commit -m "自动更新: $(date +'%Y-%m-%d') Unity版本数据"
      
      - name: 推送更改
        uses: ad-m/github-push-action@master
        with:
          # 使用PAT代替GITHUB_TOKEN, 需要在仓库设置中添加名为PAT的密钥
          github_token: ${{ secrets.PAT }}
          branch: main

# 注意: 您需要在仓库的Settings > Secrets > Actions中添加名为PAT的密钥
# 1. 访问 https://github.com/settings/tokens 生成新的个人访问令牌
# 2. 勾选repo权限
# 3. 将令牌添加到仓库的Secrets中，名称为PAT 